
    
TODO:
1. use bam.idx
2. multi-sample and multi-replicate

1. Usage: gtools asm <ref.fa> <in.gtf> <SAMPLE1.REP1,REP2,REP3 ...;SAMPLE2.REP1,REP2,REP3 ...>
            ":" separates samples, "," separates replicates
2. Load ref.fa, ref.gtf

3. Build GTF-SG
    // update node & site
    1.  update_node(exon)
        update_site(exon.start/exon.end)
    // init 
    2. alloc for node & site
        init_node/site({id, malloc(node[next/pre]/site[exon_id]}) 
    3. update edge
        GTF(don, acc) ==> (node_don_id, node_acc_id), (site_don_id, site_acc_id)
        update_edge(site_don_id, site_acc_id)       // EDGE DONE
        update_node_site(node_don_id, site_don_id) (node_acc_id, site_acc_id)
        update_node_pre/next(node_don_id, node_acc_id)  // NODE DONE
        update_site_exon(site_don/acc_id, node_don/acc_id)  // SITE DONE

(3.1). GTF-drived ASM & ASE

4. Load short-read junction info from BAM/SJ file
    for (each rep)
        read_BAM/SJ_file
            3. SR-SJ-SG
                // update node & site
                1. sj(don, acc) ==> GTF_don/acc_site_id // known sj (AND novel sj)
                    map[site[GTF_don/acc_id].exon[]] = 1
                    if (Node.map & Node.map == 1) {
                        update_node(Node) {e}
                        // update site
                        SJ_SG_update_site(e.start, e.end)
                    }
                // alloc for node&site
                2. init_node/site {id, malloc(node[next/pre]/site[exon_id]}
                3. update edge, node.next/pre, site.exon_id
                    3.0 sj(don, acc) ==> SJ_SG_site_id 
                        if (hit == 0) continue;
                    3.1 SJ_SG_update_edge(site_id, cov)                   // EDGE DONE

                    3.2 update_node_next/pre
                    sj(don, acc) ==> GTF_don/acc_site_id
                    for (site[GTF_don/acc_site_id].exon[]) {
                        if (map == 1) {
                            (exon) ==> node_id // sch(sr_sg)
                            if (hit == 0) continue;
                            update_site_exon(site_id, node_id)      // SITE DONE
                        }
                    }
                    for (don_site_id.exon[]) {
                        for (acc_site_id.exon[]) {
                            if (no_novel_sj) {
                                if (GTF_node[don.exon[]].next == GTF_node[acc.exon[]]) {
                                    update_node_next(don.exon[], acc.exon[])
                                    update_node_site(don.exon[], don_site_id) (acc.exon[], acc_site_id)
                                }
                            } else {
                                update_node_next(don.exon[], acc.exon[])    // NODE DONE
                                update_node_site(don.exon[], don_site_id) (acc.exon[], acc_site_id)
                            }
                        }
                    }


